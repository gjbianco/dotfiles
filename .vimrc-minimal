if empty(glob('~/.vim/pack/minpac/opt/minpac/autoload/minpac/impl.vim'))
  silent !git clone https://github.com/k-takata/minpac.git ~/.vim/pack/minpac/opt/minpac
endif
packadd minpac

call minpac#init()
call minpac#add('k-takata/minpac', {'type': 'opt'})
call minpac#add('morhetz/gruvbox')
call minpac#add('ap/vim-buftabline')
call minpac#add('airblade/vim-gitgutter')
call minpac#add('preservim/nerdtree')
call minpac#add('kana/vim-smartinput')
call minpac#add('tpope/vim-surround')
call minpac#add('tpope/vim-commentary')
call minpac#add('tpope/vim-repeat')
call minpac#add('tpope/vim-unimpaired')

au BufNewFile,BufRead Jenkinsfile setf groovy
au BufNewFile,BufRead Containerfile setf Dockerfile

let mapleader = ","
let g:gruvbox_guisp_fallback = "bg" " fix spell colors for gruvbox
let g:buftabline_indicators = 1

filetype plugin indent on
syntax on           " syntax highlighting
set mouse=a         " use mouse controls
set autoindent      " \
set tabstop=2       "  \
set shiftwidth=2    "   } indentation
set smarttab        "  /
set expandtab       " /
set ignorecase      " case insensitive search
set smartcase       " smart sensitive search
set background=dark " \
colorscheme gruvbox "  } colors
set t_Co=256        " /
set hidden
set backspace=indent,eol,start
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,node_modules/**,.git/**,yarn.lock,package-lock.json,build/**
set omnifunc=syntaxcomplete#Complete
hi Normal guibg=NONE ctermbg=NONE

function! SubbedCWD()
  return substitute(getcwd(), $HOME, '~', '')
endfunction
set statusline+=%{expand('%:t')}%=\ %{SubbedCWD()}\ %y\ %l:%c

function! ToggleSignColumn()
	if(&signcolumn == "no")
		set signcolumn=yes
	else
		set signcolumn=no
	endif
endfunction

nnoremap yog :call ToggleSignColumn()<CR>
nnoremap <leader>n :NERDTreeToggle<CR>
nnoremap <leader>fn :NERDTreeFind<CR>
nnoremap <leader>b :bp<cr>:bd #<cr>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" terminal mode ESC
if has('nvim')
  tnoremap <Esc> <C-\><C-n>
endif

if &diff
  highlight DiffAdd    cterm=bold ctermfg=10 ctermbg=17 gui=none guifg=bg guibg=Red
  highlight DiffDelete cterm=bold ctermfg=10 ctermbg=17 gui=none guifg=bg guibg=Red
  highlight DiffChange cterm=bold ctermfg=10 ctermbg=17 gui=none guifg=bg guibg=Red
  highlight DiffText   cterm=bold ctermfg=10 ctermbg=88 gui=none guifg=bg guibg=Red
  map <leader>1 :diffget LOCAL<CR>
  map <leader>2 :diffget BASE<CR>
  map <leader>3 :diffget REMOTE<CR>
endif
